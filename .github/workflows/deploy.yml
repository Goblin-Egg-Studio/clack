name: Deploy to Linode

on:
  push:
    branches: [main]
  workflow_dispatch: # Allow manual deployment

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1

      - name: Install Linode CLI
        run: |
          pip install linode-cli
          echo "âœ… Linode CLI installed"

      - name: Deploy to Linode via API
        run: |
          echo "ðŸš€ Starting deployment via Linode API..."
          
          # Configure Linode CLI non-interactively
          echo "ðŸ”§ Configuring Linode CLI..."
          mkdir -p ~/.config/linode-cli
          cat > ~/.config/linode-cli << EOF
          [DEFAULT]
          token = ${{ secrets.LINODE_API_TOKEN }}
          region = us-east
          EOF
          
          # Deploy code via Linode API
          echo "ðŸ“¥ Pulling latest changes..."
          linode-cli linodes ssh ${{ secrets.LINODE_INSTANCE_ID }} --command "cd /opt/clack && git pull origin main"
          
          echo "ðŸ“¦ Installing dependencies..."
          linode-cli linodes ssh ${{ secrets.LINODE_INSTANCE_ID }} --command "cd /opt/clack && bun install --no-progress --frozen-lockfile"
          
          echo "ðŸ”¨ Building application..."
          linode-cli linodes ssh ${{ secrets.LINODE_INSTANCE_ID }} --command "cd /opt/clack && bun run build"
          
          echo "ðŸ”„ Restarting service..."
          linode-cli linodes ssh ${{ secrets.LINODE_INSTANCE_ID }} --command "sudo systemctl restart clack"
          
          echo "âœ… Checking service status..."
          linode-cli linodes ssh ${{ secrets.LINODE_INSTANCE_ID }} --command "sudo systemctl status clack --no-pager"
          
          echo "ðŸ”„ Restarting Linode instance..."
          linode-cli linodes reboot ${{ secrets.LINODE_INSTANCE_ID }}
          
          echo "ðŸŽ‰ Deployment completed successfully!"




